diff --git a/parser.py b/parser.py
index 950ed83..c810dd6 100644
--- a/parser.py
+++ b/parser.py
@@ -1,5 +1,7 @@
 import os
 
+from requests.adapters import HTTPAdapter
+from requests.packages.urllib3.util.retry import Retry
 import requests
 import json
 import time
@@ -19,12 +21,30 @@ expire_after = datetime.timedelta(days=7)
 
 # requests_cache.install_cache('litcovid_cache',expire_after=expire_after)
 # logging.debug("requests_cache: %s", requests_cache.get_cache().responses.filename)
+def requests_retry_session(retries=3, backoff_factor=0.3, status_forcelist=(500, 502, 504), session=None):
+    """
+    request backoff + retry helper
+    https://www.peterbe.com/plog/best-practice-with-retries-with-requests
+    """
+
+    session = session or requests.Session()
+    retry = Retry(
+            total=retries,
+            read=retries,
+            connect=retries,
+            backoff_factor=backoff_factor,
+            status_forcelist=status_forcelist,
+            )
+    adapter = HTTPAdapter(max_retries=retry)
+    session.mount('http://', adapter)
+    session.mount('https://', adapter)
+    return session
 
 def getPubMedDataFor(pmid):
-    api_url = "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=pubmed&rettype=abstract&api_key="+str(PUBMED_API_KEY)+"&id="
-    url = api_url+str(pmid)
+    pubmed_url = "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=pubmed&rettype=abstract"
+    url = f"{pubmed_url}&api_key={PUBMED_API_KEY}&id={pmid}"
     try:
-        r = requests.get(url)
+        r = requests_retry_session.get(url, timeout=10)
         doc = parseXMLTree(r.content,pmid)
         if doc:
             doc['from_cache'] = getattr(r, 'from_cache', None)
@@ -32,6 +52,8 @@ def getPubMedDataFor(pmid):
     except requests.exceptions.ConnectionError:
         logging.warning("Exceeded request for ID '%s'", pmid)
         raise
+    except Exception as requestException:
+        logging.warning(f"Exeption during request for ID {pmid}, {requestException.message}")
 
 def parseXMLTree(res,pmid):
 
